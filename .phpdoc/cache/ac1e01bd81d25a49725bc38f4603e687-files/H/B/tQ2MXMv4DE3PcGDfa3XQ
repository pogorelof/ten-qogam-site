1718411512
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3Aef16cabd572189f548df70d3f0042c33-f36ca33140ef03b1ddaba3120510fa39
s:5776:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImYzNmNhMzMxNDBlZjAzYjFkZGFiYTMxMjA1MTBmYTM5IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6OToiY2FjaGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTY6ImNvbmZpZy9jYWNoZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjM0Mzk6Ijw/cGhwCgp1c2UgSWxsdW1pbmF0ZVxTdXBwb3J0XFN0cjsKCnJldHVybiBbCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBEZWZhdWx0IENhY2hlIFN0b3JlCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIHwKICAgIHwgVGhpcyBvcHRpb24gY29udHJvbHMgdGhlIGRlZmF1bHQgY2FjaGUgc3RvcmUgdGhhdCB3aWxsIGJlIHVzZWQgYnkgdGhlCiAgICB8IGZyYW1ld29yay4gVGhpcyBjb25uZWN0aW9uIGlzIHV0aWxpemVkIGlmIGFub3RoZXIgaXNuJ3QgZXhwbGljaXRseQogICAgfCBzcGVjaWZpZWQgd2hlbiBydW5uaW5nIGEgY2FjaGUgb3BlcmF0aW9uIGluc2lkZSB0aGUgYXBwbGljYXRpb24uCiAgICB8CiAgICAqLwoKICAgICdkZWZhdWx0JyA9PiBlbnYoJ0NBQ0hFX1NUT1JFJywgJ2RhdGFiYXNlJyksCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBDYWNoZSBTdG9yZXMKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBIZXJlIHlvdSBtYXkgZGVmaW5lIGFsbCBvZiB0aGUgY2FjaGUgInN0b3JlcyIgZm9yIHlvdXIgYXBwbGljYXRpb24gYXMKICAgIHwgd2VsbCBhcyB0aGVpciBkcml2ZXJzLiBZb3UgbWF5IGV2ZW4gZGVmaW5lIG11bHRpcGxlIHN0b3JlcyBmb3IgdGhlCiAgICB8IHNhbWUgY2FjaGUgZHJpdmVyIHRvIGdyb3VwIHR5cGVzIG9mIGl0ZW1zIHN0b3JlZCBpbiB5b3VyIGNhY2hlcy4KICAgIHwKICAgIHwgU3VwcG9ydGVkIGRyaXZlcnM6ICJhcGMiLCAiYXJyYXkiLCAiZGF0YWJhc2UiLCAiZmlsZSIsICJtZW1jYWNoZWQiLAogICAgfCAgICAgICAgICAgICAgICAgICAgInJlZGlzIiwgImR5bmFtb2RiIiwgIm9jdGFuZSIsICJudWxsIgogICAgfAogICAgKi8KCiAgICAnc3RvcmVzJyA9PiBbCgogICAgICAgICdhcnJheScgPT4gWwogICAgICAgICAgICAnZHJpdmVyJyA9PiAnYXJyYXknLAogICAgICAgICAgICAnc2VyaWFsaXplJyA9PiBmYWxzZSwKICAgICAgICBdLAoKICAgICAgICAnZGF0YWJhc2UnID0+IFsKICAgICAgICAgICAgJ2RyaXZlcicgPT4gJ2RhdGFiYXNlJywKICAgICAgICAgICAgJ3RhYmxlJyA9PiBlbnYoJ0RCX0NBQ0hFX1RBQkxFJywgJ2NhY2hlJyksCiAgICAgICAgICAgICdjb25uZWN0aW9uJyA9PiBlbnYoJ0RCX0NBQ0hFX0NPTk5FQ1RJT04nLCBudWxsKSwKICAgICAgICAgICAgJ2xvY2tfY29ubmVjdGlvbicgPT4gZW52KCdEQl9DQUNIRV9MT0NLX0NPTk5FQ1RJT04nLCBudWxsKSwKICAgICAgICBdLAoKICAgICAgICAnZmlsZScgPT4gWwogICAgICAgICAgICAnZHJpdmVyJyA9PiAnZmlsZScsCiAgICAgICAgICAgICdwYXRoJyA9PiBzdG9yYWdlX3BhdGgoJ2ZyYW1ld29yay9jYWNoZS9kYXRhJyksCiAgICAgICAgICAgICdsb2NrX3BhdGgnID0+IHN0b3JhZ2VfcGF0aCgnZnJhbWV3b3JrL2NhY2hlL2RhdGEnKSwKICAgICAgICBdLAoKICAgICAgICAnbWVtY2FjaGVkJyA9PiBbCiAgICAgICAgICAgICdkcml2ZXInID0+ICdtZW1jYWNoZWQnLAogICAgICAgICAgICAncGVyc2lzdGVudF9pZCcgPT4gZW52KCdNRU1DQUNIRURfUEVSU0lTVEVOVF9JRCcpLAogICAgICAgICAgICAnc2FzbCcgPT4gWwogICAgICAgICAgICAgICAgZW52KCdNRU1DQUNIRURfVVNFUk5BTUUnKSwKICAgICAgICAgICAgICAgIGVudignTUVNQ0FDSEVEX1BBU1NXT1JEJyksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAvLyBNZW1jYWNoZWQ6Ok9QVF9DT05ORUNUX1RJTUVPVVQgPT4gMjAwMCwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ3NlcnZlcnMnID0+IFsKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAnaG9zdCcgPT4gZW52KCdNRU1DQUNIRURfSE9TVCcsICcxMjcuMC4wLjEnKSwKICAgICAgICAgICAgICAgICAgICAncG9ydCcgPT4gZW52KCdNRU1DQUNIRURfUE9SVCcsIDExMjExKSwKICAgICAgICAgICAgICAgICAgICAnd2VpZ2h0JyA9PiAxMDAsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICBdLAogICAgICAgIF0sCgogICAgICAgICdyZWRpcycgPT4gWwogICAgICAgICAgICAnZHJpdmVyJyA9PiAncmVkaXMnLAogICAgICAgICAgICAnY29ubmVjdGlvbicgPT4gZW52KCdSRURJU19DQUNIRV9DT05ORUNUSU9OJywgJ2NhY2hlJyksCiAgICAgICAgICAgICdsb2NrX2Nvbm5lY3Rpb24nID0+IGVudignUkVESVNfQ0FDSEVfTE9DS19DT05ORUNUSU9OJywgJ2RlZmF1bHQnKSwKICAgICAgICBdLAoKICAgICAgICAnZHluYW1vZGInID0+IFsKICAgICAgICAgICAgJ2RyaXZlcicgPT4gJ2R5bmFtb2RiJywKICAgICAgICAgICAgJ2tleScgPT4gZW52KCdBV1NfQUNDRVNTX0tFWV9JRCcpLAogICAgICAgICAgICAnc2VjcmV0JyA9PiBlbnYoJ0FXU19TRUNSRVRfQUNDRVNTX0tFWScpLAogICAgICAgICAgICAncmVnaW9uJyA9PiBlbnYoJ0FXU19ERUZBVUxUX1JFR0lPTicsICd1cy1lYXN0LTEnKSwKICAgICAgICAgICAgJ3RhYmxlJyA9PiBlbnYoJ0RZTkFNT0RCX0NBQ0hFX1RBQkxFJywgJ2NhY2hlJyksCiAgICAgICAgICAgICdlbmRwb2ludCcgPT4gZW52KCdEWU5BTU9EQl9FTkRQT0lOVCcpLAogICAgICAgIF0sCgogICAgICAgICdvY3RhbmUnID0+IFsKICAgICAgICAgICAgJ2RyaXZlcicgPT4gJ29jdGFuZScsCiAgICAgICAgXSwKCiAgICBdLAoKICAgIC8qCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIHwgQ2FjaGUgS2V5IFByZWZpeAogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8CiAgICB8IFdoZW4gdXRpbGl6aW5nIHRoZSBBUEMsIGRhdGFiYXNlLCBtZW1jYWNoZWQsIFJlZGlzLCBhbmQgRHluYW1vREIgY2FjaGUKICAgIHwgc3RvcmVzLCB0aGVyZSBtaWdodCBiZSBvdGhlciBhcHBsaWNhdGlvbnMgdXNpbmcgdGhlIHNhbWUgY2FjaGUuIEZvcgogICAgfCB0aGF0IHJlYXNvbiwgeW91IG1heSBwcmVmaXggZXZlcnkgY2FjaGUga2V5IHRvIGF2b2lkIGNvbGxpc2lvbnMuCiAgICB8CiAgICAqLwoKICAgICdwcmVmaXgnID0+IGVudignQ0FDSEVfUFJFRklYJywgU3RyOjpzbHVnKGVudignQVBQX05BTUUnLCAnbGFyYXZlbCcpLCAnXycpLidfY2FjaGVfJyksCgpdOwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";